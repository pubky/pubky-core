# This workflow builds the artifacts for the release.
# It creates the gzips and uploads them as artifacts.
# The artifacts can then be used to create a release on Github.

name: Build Artifacts

on:
  # This workflow is triggered every time a push is made to the main branch.
  # Aka when a PR is merged.
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Setup the environment
      - name: Log in to GitHub Container Registry # Where we store the docker images with the cross compile toolchain for Apple
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install cross # Tool to cross-compile the binaries
        run: cargo install cross --git https://github.com/cross-rs/cross --rev 51f46f296253d8122c927c5bb933e3c4f27cc317


      # Build artifacts
      - name: Build Artifacts
        run: .scripts/build-artifacts.sh

      # Upload artifacts to Github
      - name: Gzip artifacts
        run: (cd target && tar -czf github-release.tar.gz github-release)
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pubky-core-artifacts.tar.gz
          path: target/github-release.tar.gz
          if-no-files-found: error
          overwrite: true


