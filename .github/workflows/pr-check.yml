name: PR Check

on:
  pull_request:
  push:
    branches: [main]

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true
      - name: Check formatting
        run: cargo fmt --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Lint with Clippy
        run: cargo clippy --workspace --all-features -- -D warnings -A clippy::needless_lifetimes

  test:
    strategy:
      matrix:
        crate:
          [pubky, pubky-common, pubky-homeserver, pubky-testnet, http-relay]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install Nextest
        uses: taiki-e/install-action@nextest
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Run doctests and nextest
        run: |
          set -e
          # nextest does not support doctests yet.
          cargo test --doc -p ${{ matrix.crate }} --all-features 

          if cargo nextest run \
            -p ${{ matrix.crate }} \
            --all-features \
            --test-threads num-cpus \
            --retries 2 \
            --no-fail-fast \
            --verbose; then
            echo "Tests passed for ${{ matrix.crate }}"
          else
            if [ $? -eq 4 ]; then
              echo "No tests found for ${{ matrix.crate }}"
              exit 0
            else
              echo "Tests failed for ${{ matrix.crate }}"
              exit 1
            fi
          fi

  wasm-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Install netcat and other tools
        run: sudo apt-get update && sudo apt-get install -y netcat-openbsd lsof

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Build WASM
        run: |
          cd pubky/pkg
          npm install
          npm run build

      - name: Create test configuration
        run: |
          # Create a special configuration file for tests
          echo 'export function getTestConfig() {
            return {
              useLocalhost: true,
              testMode: true,
              homeserverUrl: "http://127.0.0.1:6286",
              relayUrl: "http://127.0.0.1:15411"
            };
          }' > pubky/pkg/test/test-config.js

      - name: Build Testnet Binary with debugging
        run: |
          # Build with detailed logging
          RUST_LOG=debug cargo build -p pubky-testnet

      - name: Start Testnet
        run: |
          # Start with explicit host bindings
          RUST_LOG=debug PUBKY_TEST_LOCAL=1 PUBKY_BIND_ADDR=0.0.0.0 ./target/debug/pubky-testnet &
          TESTNET_PID=$!
          echo "Testnet PID: $TESTNET_PID"

          # Wait for ports to be open
          timeout 120 sh -c 'until nc -z localhost 15411 && nc -z localhost 15412 && nc -z localhost 6286; do sleep 1; done'

          # Check what's listening on these ports
          echo "Network ports in use:"
          sudo lsof -i :15411,15412,6286

          # Verify network connectivity
          echo "Testing connectivity to Pkarr relay:"
          curl -v http://127.0.0.1:15411 || true
          echo "Testing connectivity to homeserver:"  
          curl -v http://127.0.0.1:6286 || true

      - name: Run Tests
        run: |
          cd pubky/pkg
          # Set environment variables for tests
          export PUBKY_TEST_URL="http://127.0.0.1:6286"
          export PUBKY_TEST_LOCAL=1
          export PUBKY_FORCE_LOCALHOST=1
          export NODE_TLS_REJECT_UNAUTHORIZED=0
          # Run tests with explicit debug logging
          NODE_DEBUG=http,net,fetch,request npm run test-nodejs || (echo "Tests failed, checking logs:" && cat test-*.log || true)

      - name: Cleanup
        if: always()
        run: |
          pkill -f "pubky-testnet" || true
