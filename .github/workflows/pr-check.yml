name: PR Check

on:
  pull_request:
  push:
    branches: [main]

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.89
          components: rustfmt
          override: true
      - name: Check formatting
        run: cargo fmt --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.89
          components: clippy
          override: true
      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Lint (host targets)
        run: cargo clippy --workspace --all-features --exclude pubky-wasm -- -D warnings

      - name: Add wasm target
        run: rustup target add wasm32-unknown-unknown

      - name: Lint wasm crate (wasm32)
        run: cargo clippy -p pubky-wasm --target wasm32-unknown-unknown -- -D warnings

  test:
    strategy:
      matrix:
        crate:
          [
            pubky,
            pubky-common,
            pubky-homeserver,
            pubky-testnet,
            http-relay,
            pkarr-republisher,
            e2e,
          ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.89
          override: true
      - name: Install Nextest
        uses: taiki-e/install-action@nextest
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Run doctests and nextest
        run: |
          set -e
          # nextest does not support doctests yet.
          cargo test --doc -p ${{ matrix.crate }} --all-features 

          if cargo nextest run \
            -p ${{ matrix.crate }} \
            --all-features \
            --test-threads num-cpus \
            --retries 2 \
            --no-fail-fast \
            --verbose; then
            echo "Tests passed for ${{ matrix.crate }}"
          else
            if [ $? -eq 4 ]; then
              echo "No tests found for ${{ matrix.crate }}"
              exit 0
            else
              echo "Tests failed for ${{ matrix.crate }}"
              exit 1
            fi
          fi

  doc:
    strategy:
      matrix:
        crate: [pubky, pubky-testnet]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.89
          override: true
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Build docs
        run: cargo doc -p ${{ matrix.crate }} --all-features --no-deps

  examples:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.89
          override: true
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Cargo check examples
        run: |
          cargo check -p examples --all-features --bins

  wasm-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.89
          target: wasm32-unknown-unknown
          override: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install wasm-pack
        run: cargo install wasm-pack

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Run wasm-pack unit tests
        working-directory: pubky-sdk/bindings/js
        run: wasm-pack test --node

      - name: Install Electron/X deps
        run: |
          set -eux
          sudo apt-get update
          # base deps (don’t include libasound here so a single missing package doesn’t abort)
          sudo apt-get install -y --no-install-recommends \
            xvfb \
            libgtk-3-0 \
            libnss3 \
            libxss1 \
            libx11-xcb1 \
            libxcb-dri3-0 \
            libdrm2 \
            libgbm1 \
            libxdamage1 \
            libxshmfence1 \
            libxtst6
          # asound: Ubuntu 24.04 uses libasound2t64; older images still use libasound2
          sudo apt-get install -y --no-install-recommends libasound2t64 || \
          sudo apt-get install -y --no-install-recommends libasound2

      - name: Sanity Check (Electron works)
        run: xvfb-run -a npx electron --no-sandbox --version

      - name: Build WASM
        working-directory: pubky-sdk/bindings/js/pkg
        run: |
          npm install
          npm run build

      - name: Run the testnet
        working-directory: pubky-sdk/bindings/js/pkg
        run: npm run testnet > testnet.log 2>&1 &

      - name: Wait for testnet homeserver
        run: |
          timeout=180
          count=0
          until nc -zv 127.0.0.1 6288; do
            if [ $count -ge $timeout ]; then
              echo "Timeout: Testnet homeserver did not start within 3 minutes."
              exit 1
            fi
            echo "Waiting for testnet homeserver to be ready... ($count/$timeout)"
            sleep 1
            count=$((count + 1))
          done
          echo "Testnet homeserver is ready."

      - name: Node tests
        working-directory: pubky-sdk/bindings/js/pkg
        run: npm run test-nodejs

      - name: Browser tests (Electron under Xvfb)
        working-directory: pubky-sdk/bindings/js/pkg
        env:
          ELECTRON_DISABLE_SANDBOX: "1" # CI-safe
        run: |
          npx electron --version || true
          xvfb-run -a npm run test-browser:ci

      - name: Show testnet logs if tests fail
        working-directory: pubky-sdk/bindings/js/pkg
        if: failure()
        run: cat testnet.log

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build .
