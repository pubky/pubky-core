[package]
name = "pubky"
description = "Pubky SDK"
version = "0.6.0-rc.6"
edition = "2024"
authors = [
    "SeverinAlexB <severin@synonym.to>",
    "SHAcollision <shacollision@synonym.to>",
    "Nuh <nuh@nuh.dev>",
]
license = "MIT"
homepage = "https://github.com/pubky/pubky-core"
repository = "https://github.com/pubky/pubky-core"

keywords = ["web", "dht", "dns", "decentralized", "identity"]
categories = [
    "network-programming",
    "cryptography",
    "web-programming",
    "authentication",
]

[lib]
crate-type = ["rlib"]

[features]
default = []
json = ["dep:serde", "reqwest/json"]

[dependencies]
pubky-common = { path = "../pubky-common", version = "0.6.0-rc.6" }
thiserror = "2.0.11"
url = "2.5.4"
base64 = "0.22.1"
pkarr = { workspace = true, features = ["full"] }
cookie = "0.18.1"
flume = { version = "0.11.1", default-features = false, features = ["async"] }
futures-util = "0.3.31"
serde = { version = "1", features = ["derive"], optional = true }
httpdate = "1"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
reqwest = { version = "0.12.12", default-features = false, features = [
    "cookies",
    "rustls-tls",
    "json",
] }
tokio = { version = "1.43.0", features = ["full"] }
tracing = "0.1.41"

[target.'cfg(target_arch = "wasm32")'.dependencies]
reqwest = { version = "0.12.12", default-features = false, features = ["json"] }
log = "0.4.25"
wasm-bindgen-futures = "0.4.50"
futures-lite = { version = "2.6.0", default-features = false }

[dev-dependencies]
pubky-testnet = { path = "../pubky-testnet" } # used in docstring tests
httpmock = "0.7"

[package.metadata.docs.rs]
all-features = true


# We are aiming to stick with microsoft/rust-guidelines
# https://github.com/microsoft/rust-guidelines
# currently dissabled.

[lints.rust]
# Baseline compiler lints
ambiguous_negative_literals = "warn"
missing_debug_implementations = "warn"
redundant_imports = "warn"
redundant_lifetimes = "warn"
trivial_numeric_casts = "warn"
unsafe_op_in_unsafe_fn = "warn"
unused_lifetimes = "warn"

[lints.clippy]
# Enable all major clippy categories at warn
cargo = { level = "warn", priority = -1 }
complexity = { level = "warn", priority = -1 }
correctness = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
perf = { level = "warn", priority = -1 }
style = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }
# nursery = { level = "warn", priority = -1 }

# Select restriction-group lints for consistency and safety
allow_attributes_without_reason = "warn"
as_pointer_underscore = "warn"
assertions_on_result_states = "warn"
clone_on_ref_ptr = "warn"
deref_by_slicing = "warn"
disallowed_script_idents = "warn"
empty_drop = "warn"
empty_enum_variants_with_brackets = "warn"
empty_structs_with_brackets = "warn"
fn_to_numeric_cast_any = "warn"
if_then_some_else_none = "warn"
map_err_ignore = "warn"
redundant_type_annotations = "warn"
renamed_function_params = "warn"
semicolon_outside_block = "warn"
string_to_string = "warn"
undocumented_unsafe_blocks = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unneeded_field_pattern = "warn"
unused_result_ok = "warn"
